# Docker compose is a tool to manage multi-containers app, run and stop them with one command
services:
  nginx:
    container_name: nginx
    # Name image
    image: nginx
    # depends-on does tell compose on which order to start the containers.
    # ! IMPORTANT : docker compose can't tell if a container is ready to operate.
    depends_on:
      - wordpress
    build:
      # Target the Dockerfile location
      context: ./requirements/nginx
      # Over specify only if Dockerfile is not named Dockerfile
      dockerfile: Dockerfile
      # Build time arguments
      args:
        DEBIAN_VERSION: ${DEBIAN_VERSION}
        PATH_NGINX_CERTIFICATE: ${PATH_NGINX_CERTIFICATE}
        PATH_NGINX_TSL_KEY: ${PATH_NGINX_TSL_KEY}
    # Map host ports to container ports
    ports:
      - "443:443"
    # Run time env variables plugged as variables envs in the container
    env_file:
      - ./.env
    # Define which part of the container is a bind mount (see note lower)
    volumes:
      - wordpress_volume:/var/www/html
    # Critical service, should always be running
    restart: always
    # Include the container in the network.
    networks:
      - inception_network

  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
      args:
        DEBIAN_VERSION: ${DEBIAN_VERSION}
    env_file:
      - ./.env
    expose:
      - "3306"
    volumes:
      - mariadb_volume:/var/lib/mysql
    # Should run continuously but can be stopped manually
    restart: unless-stopped
    networks:
      - inception_network

  wordpress:
    container_name: wordpress
    image: wordpress
    depends_on:
      - mariadb
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
      args:
        DEBIAN_VERSION: ${DEBIAN_VERSION}
    env_file:
      - ./.env
    expose:
      - "9000"
    volumes:
      - wordpress_volume:/var/www/
    restart: on-failure
    networks:
      - inception_network

volumes:
  # Define a volume named 'mariadb_volume'
  mariadb_volume:
    # Use the local driver for the volume
    driver: local
    driver_opts:
      # Specify the type as 'none' to use a bind mount
      type: none
      # Path on the host machine to bind mount
      device: '/home/${USER}/data/mariadb'
      # Bind the specified host path to the volume
      o: bind

  wordpress_volume:
    driver: local
    driver_opts:
      type: none
      device: '/home/${USER}/data/wordpress'  
      o: bind
#                   !  NOTE ON BIND MOUNT
# A bind mount allows you to mount a directory or file from the host machine
# into the container. This is useful for sharing data between the host and the container.

networks:
  inception_network:
    name: inception_network